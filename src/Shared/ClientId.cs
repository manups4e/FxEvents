namespace FxEvents.Shared
{
    /*
    public class ClientId : ISource
    {
        public int Handle { get; set; }

        public ClientId() { }
        public ClientId(int handle)
        {
            Handle = handle;
        }

        public static explicit operator ClientId(int handle) => new(handle);
        public static explicit operator ClientId(string netId)
        {
            if (int.TryParse(netId.Replace("net:", string.Empty), out int handle))
            {
                return new ClientId(handle);
            }

            throw new Exception($"Could not parse net id: {netId}");
        }

        public ClientId(BinaryReader reader)
        {
            UnpackSerializedBytes(reader);
        }

        public new void PackSerializedBytes(BinaryWriter writer)
        {
            // Auto-generated by the Serialization Generator. Created by Lucas mantained by Manups4e.
            writer.Write(Handle);
        }
        public new void UnpackSerializedBytes(BinaryReader reader)
        {
            // Auto-generated by the Serialization Generator. Created by Lucas mantained by Manups4e.
            Handle = reader.ReadInt32();
        }

    }
    */
}